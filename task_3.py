"""Создать собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Запрашивать у пользователя данные и заполнять список необходимо
только числами. Класс-исключение должен контролировать типы данных элементов списка. Примечание: длина списка не
фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например,
команду «stop». При этом скрипт завершается, сформированный список с числами выводится на экран. Подсказка: для этого
задания примем, что пользователь может вводить только числа и строки. Во время ввода пользователем очередного
элемента необходимо реализовать проверку типа элемента. Вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение. При
этом работа скрипта не должна завершаться. """


class NotOnlyNumbersException(Exception):

    def __init__(self, message):
        self.message = message

    @classmethod
    def are_numerics(cls, values):
        return all([str(a).isnumeric() for a in values])

my_list = []

while True:
    value = input('Введите число (stop - для выхода): ')
    if value == 'stop':
        print(f'Список: "{my_list}".')
        break
    else:
        try:
            if NotOnlyNumbersException.are_numerics(value):
                my_list.append(value)
            else:
                raise NotOnlyNumbersException('Введенное значение элемента не является цифрой.')
        except NotOnlyNumbersException as e:
            print(e)
